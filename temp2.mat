%% load and change matfile
close all; clc; clearvars -except data_struct;

fpath = '/Users/esenes/swap_out/exp/';
fname = 'Exp_analized_Loaded41MW_';
fnum = {'1','4','5','6','7','8','9','10','11'};
fnum = {'1','2','3'};


fext = '.mat';

spath = '/Users/esenes/Desktop/new_datasets/';

%% loop over files
for k=1:length(fnum) %loop over files
    clearvars -except fext fname fnum fpath spath k
    fullName = [fpath fname fnum{k} fext];
    disp(['Processing file: ' fullName])
    %load old data
    load(fullName)
    
    %copy the BDs array
    if exist('BDs_ts_new') == 1
        BDs_ts = BDs_ts_new;
        clearvars BDs_ts_new
    end
    
    %copy into data_struct
    for jj=1:length(BDs_ts)
        data_struct.(BDs_ts{jj})=BD_struct.(BDs_ts{jj});
    end
    
    
    
    %add the delay field in edge case
    %rebuild delays lists
    corr_delay = [];
    corr_fail = [];
    edge_delay = [];
    for ll=1:length(BDs_ts)
        corr_delay = [corr_delay data_struct.(BDs_ts{ll}).position.correlation.delay_time];
        corr_fail = [corr_fail data_struct.(BDs_ts{ll}).position.correlation.fail];
        
        data_struct.(BDs_ts{ll}).position.edge.delay_edge = data_struct.(BDs_ts{ll}).position.edge.time_REF - ...
            data_struct.(BDs_ts{ll}).position.edge.time_TRA;
        BD_struct.(BDs_ts{ll}).position.edge.delay_edge = data_struct.(BDs_ts{ll}).position.edge.time_REF - ...
            data_struct.(BDs_ts{ll}).position.edge.time_TRA;
        
        edge_delay = [edge_delay BD_struct.(BDs_ts{ll}).position.edge.delay_edge];
    end
    %remove the flag lists
    clearvars inMetric isSpike sec_spike beam_lost sec_beam_lost clusters hasBeam
    
    %save the new data
    saveName = [spath fname fnum{k} fext];
    disp(['Save file: ' saveName])
    save(saveName,'BD_struct','BDs_ts','corr_delay','corr_fail','data_struct','edge_delay','-v7.3')
    
    disp(' ')
end

%% copy and remove the BDs_ts_new

fn = fieldnames(BD_struct);
ll = {};
for kk=1:length(BD_struct)
    if strcmpi(fn{kk}(end-1:end),'B0')
        ll = [ll fn{kk}];
    end
end
